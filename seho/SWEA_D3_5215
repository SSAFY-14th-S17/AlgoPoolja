import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

/*
 * 햄버거 다이어트
 */

public class D3_5215 {
	static int N;
	static int L;
	static int[] scoreArr;
	static int[] kcalArr;
	static int max;
	private static void combin(int depth, int curScore, int curKcal) {
		if (curKcal > L) {
			return;
		}
		
		if (depth == kcalArr.length) {
			max = Math.max(curScore, max);
			return;
		}
		
			
		int nextScore = curScore + scoreArr[depth];
		int nextKcal = curKcal + kcalArr[depth];
			
		// 재료 포함
		combin(depth + 1, nextScore, nextKcal);
		
		// 재료 포함 x
		combin(depth + 1, curScore, curKcal);
	}
	
	public static void main(String[] args) throws IOException, FileNotFoundException {
		// System.setIn(new FileInputStream("sample_input.txt"));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int T = Integer.parseInt(br.readLine());
		
		for (int tc = 1; tc <= T; tc++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			
			N = Integer.parseInt(st.nextToken());
			L = Integer.parseInt(st.nextToken());
			
			scoreArr = new int[N];
			kcalArr = new int[N];
			
			for (int i = 0; i < N; i++) {
				st = new StringTokenizer(br.readLine());
				scoreArr[i] = Integer.parseInt(st.nextToken());
				kcalArr[i] = Integer.parseInt(st.nextToken());
			}
			
			max = 0;
			combin(0, 0, 0);
			
			// 출력
			System.out.println("#" + tc + " " + max);
		}
		
	}

}
